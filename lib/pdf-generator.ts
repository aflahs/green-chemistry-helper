import type { ReactionData, AnalysisResult } from "./types"
import { jsPDF } from "jspdf"
import "jspdf/dist/polyfills.es.js"

export function generatePDF(reactionData: ReactionData, analysisResult: AnalysisResult) {
  // Create a new PDF document
  const doc = new jsPDF()

  // Set font styles
  doc.setFont("helvetica", "bold")
  doc.setFontSize(20)
  doc.setTextColor(39, 174, 96) // Green color

  // Add title
  doc.text("Green Chemistry Analysis Report", 105, 20, { align: "center" })

  // Add date
  doc.setFont("helvetica", "normal")
  doc.setFontSize(10)
  doc.setTextColor(100, 100, 100)
  const date = new Date().toLocaleDateString()
  doc.text(`Generated on: ${date}`, 105, 30, { align: "center" })

  // Add eco-rating
  doc.setFontSize(16)
  doc.setTextColor(39, 174, 96)
  doc.text("Eco-Rating:", 20, 45)

  // Set color based on rating
  if (analysisResult.ecoRating === "Good") {
    doc.setTextColor(39, 174, 96) // Green
  } else if (analysisResult.ecoRating === "Moderate") {
    doc.setTextColor(243, 156, 18) // Yellow/Orange
  } else {
    doc.setTextColor(231, 76, 60) // Red
  }

  doc.setFont("helvetica", "bold")
  doc.text(analysisResult.ecoRating, 70, 45)

  // Add reaction details section
  doc.setFont("helvetica", "bold")
  doc.setFontSize(14)
  doc.setTextColor(39, 174, 96)
  doc.text("Reaction Details", 20, 60)

  // Add reaction details
  doc.setFont("helvetica", "normal")
  doc.setFontSize(12)
  doc.setTextColor(0, 0, 0)
  doc.text(`Reactants: ${reactionData.reactants}`, 20, 70)
  doc.text(`Products: ${reactionData.products}`, 20, 80)
  doc.text(`Solvent: ${reactionData.solvent}`, 20, 90)
  doc.text(`Catalyst: ${reactionData.catalyst || "None"}`, 20, 100)
  doc.text(`Temperature: ${reactionData.temperature}Â°C`, 20, 110)

  // Add issues section
  let yPos = 130

  doc.setFont("helvetica", "bold")
  doc.setFontSize(14)
  doc.setTextColor(231, 76, 60) // Red for issues
  doc.text("Green Chemistry Issues", 20, yPos)
  yPos += 10

  // Add issues
  doc.setFont("helvetica", "normal")
  doc.setFontSize(12)
  doc.setTextColor(0, 0, 0)

  if (analysisResult.issues.length === 0) {
    doc.text("No issues found. Your reaction follows green chemistry principles.", 20, yPos)
    yPos += 10
  } else {
    analysisResult.issues.forEach((issue) => {
      doc.setFont("helvetica", "bold")
      doc.text(issue.title, 20, yPos)
      yPos += 7
      doc.setFont("helvetica", "normal")

      // Handle long descriptions by wrapping text
      const splitDescription = doc.splitTextToSize(issue.description, 170)
      doc.text(splitDescription, 20, yPos)
      yPos += splitDescription.length * 7 + 5
    })
  }

  // Check if we need a new page for suggestions
  if (yPos > 250) {
    doc.addPage()
    yPos = 20
  }

  // Add suggestions section
  doc.setFont("helvetica", "bold")
  doc.setFontSize(14)
  doc.setTextColor(39, 174, 96) // Green for suggestions
  doc.text("Greener Alternatives", 20, yPos)
  yPos += 10

  // Add suggestions
  doc.setFont("helvetica", "normal")
  doc.setFontSize(12)
  doc.setTextColor(0, 0, 0)

  analysisResult.suggestions.forEach((suggestion) => {
    doc.setFont("helvetica", "bold")
    doc.text(suggestion.title, 20, yPos)
    yPos += 7
    doc.setFont("helvetica", "normal")

    // Handle long descriptions by wrapping text
    const splitDescription = doc.splitTextToSize(suggestion.description, 170)
    doc.text(splitDescription, 20, yPos)
    yPos += splitDescription.length * 7 + 5
  })

  // Check if we need a new page for energy tips
  if (yPos > 250) {
    doc.addPage()
    yPos = 20
  }

  // Add energy tips section
  doc.setFont("helvetica", "bold")
  doc.setFontSize(14)
  doc.setTextColor(41, 128, 185) // Blue for energy tips
  doc.text("Energy Saving Tips", 20, yPos)
  yPos += 10

  // Add energy tips
  doc.setFont("helvetica", "normal")
  doc.setFontSize(12)
  doc.setTextColor(0, 0, 0)

  analysisResult.energyTips.forEach((tip) => {
    doc.setFont("helvetica", "bold")
    doc.text(tip.title, 20, yPos)
    yPos += 7
    doc.setFont("helvetica", "normal")

    // Handle long descriptions by wrapping text
    const splitDescription = doc.splitTextToSize(tip.description, 170)
    doc.text(splitDescription, 20, yPos)
    yPos += splitDescription.length * 7 + 5
  })

  // Add footer
  doc.setFontSize(10)
  doc.setTextColor(100, 100, 100)
  doc.text("Generated by Green Chemistry Helper", 105, 285, { align: "center" })

  // Save the PDF
  doc.save("green-chemistry-analysis.pdf")
}
